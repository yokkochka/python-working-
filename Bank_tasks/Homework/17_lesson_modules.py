

# import math

# fact = int(input("Введите число: "))
# print(f"Факториал вашего числа равен: {math.factorial(fact)}")




# import random
# rnd = random.randint(0, 100)
# print(f"Рандомное число от 0 до 100: {rnd}")

# rnd_list = list(random.uniform(10, 20) for _ in range(5))
# print(f"Список случайных чисел с точкой от 0 до 1: {rnd_list}")

# random.shuffle(rnd_list)
# print(f"Перемешанный список: {rnd_list}")

# rnd_element = random.choice(rnd_list)
# print(f"Случайный элемент списка: {rnd_element}")


import time

def print_text_stage_by_stage(text, delay):
    for sentence in text:
        print(sentence)
        time.sleep(delay)


text = [
    "Кодер и его проект",
    "В небольшом городе жил молодой программист по имени Макс. Он был страстным поклонником Python и мечтал создать что-то удивительное с его помощью.",
    "Однажды, вдохновленный идеей, он принял решение начать работу над новым проектом.",
    "Макс просыпался рано утром, наполняя свой день бесконечными строками кода. Он погружался в мир алгоритмов и структур данных, изучая новые библиотеки и фреймворки, чтобы превратить свои идеи в реальность.",
    "Недели пролетели, но Макс не замечал усталости. Его проект приобретал форму и функциональность, словно пробуждаясь к жизни под его руками. Он экспериментировал, решая сложные задачи и улучшая свой код с каждым днем.",
    "Однажды, когда проект почти был завершен, Макс столкнулся с неожиданной ошибкой. Его программу начало трясти от непредвиденных багов, которые угрожали всему его труду.",
    "Но Макс не сдавался. Он боролся с проблемой, проводил дни и ночи, исправляя ошибки и улучшая свой код.",
    "Наконец, настал долгожданный момент. Проект был готов. Макс запустил его и увидел, как его труд приносит плоды. Его программа работала безупречно, как он и мечтал.",
    "В этот момент он почувствовал истинное удовлетворение от своего труда и вдохновение на новые творческие начинания в мире Python."
]

start_time = time.time()  # Засекаем время начала выполнения программы
print_text_stage_by_stage(text, 2)  # Выводим текст с задержкой 2 секунды между каждым этапом
end_time = time.time()  # Засекаем время окончания выполнения программы

execution_time = end_time - start_time  # Вычисляем время выполнения программы
print("Время выполнения программы:", execution_time, "секунд")






